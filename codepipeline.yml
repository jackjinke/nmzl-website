AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Pipeline using CodePipeline and CodeBuild for continuous delivery of a
  single-page application to S3.
  Based on: https://stelligent.com/2017/09/05/continuous-delivery-to-s3-via-codepipeline-and-codebuild/
Parameters:
  SiteBucketName:
    Type: String
    Description: Name of bucket to create to host the website
  SiteImgBucketName:
    Type: String
    Description: Name of bucket to create to host the website
  GitHubUser:
    Type: String
    Description: GitHub User
    Default: jackjinke
  GitHubRepo:
    Type: String
    Description: GitHub Repo to pull from. Only the Name. not the URL
    Default: nmzl-website
  GitHubBranch:
    Type: String
    Description: GitHub Branch
    Default: master
  GitHubToken:
    NoEcho: true
    Type: String
    Description: >-
      Secret. An OAuthToken with access to Repo.
      Go to https://github.com/settings/tokens
  BuildType:
    Type: String
    Default: LINUX_CONTAINER
    Description: The build container type to use for building the app
  BuildComputeType:
    Type: String
    Default: BUILD_GENERAL1_SMALL
    Description: The build compute type to use for building the app
  BuildImage:
    Type: String
    Default: 'aws/codebuild/nodejs:8.11.0'
    Description: The build image to use for building the app
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Site Configuration
        Parameters:
          - SiteBucketName
          - SiteImgBucketName
      - Label:
          default: GitHub Configuration
        Parameters:
          - GitHubToken
          - GitHubUser
          - GitHubRepo
          - GitHubBranch
      - Label:
          default: Build Configuration
        Parameters:
          - BuildType
          - BuildComputeType
          - BuildImage
    ParameterLabels:
      SiteBucketName:
        default: Name of S3 Bucket to create for website hosting
      SiteImgBucketName:
        default: Name of S3 Bucket to create for website hosting
      GitHubToken:
        default: GitHub OAuth2 Token
      GitHubUser:
        default: GitHub User/Org Name
      GitHubRepo:
        default: GitHub Repository Name
      GitHubBranch:
        default: GitHub Branch Name
      BuildType:
        default: CodeBuild type
      BuildComputeType:
        default: CodeBuild instance type
      BuildImage:
        default: CodeBuild image
  'AWS::CloudFormation::Designer':
    75cc0fc4-e9a4-46e9-9cc3-b46eb0b476ad:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 90
      z: 1
      embeds: []
    23e12e3c-b3d3-44bf-80f0-a63bbe9b84b5:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 90
      z: 1
      embeds: []
    f7bf9884-1fd4-4612-866e-21ed4f47ba9c:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 210
      z: 1
      embeds: []
    634a8f99-678c-43b8-8099-a72a842efc0a:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 210
      z: 1
      embeds: []
    a0a8ee2a-57a3-47df-a6ea-fc2bbb9cef7f:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 90
      z: 1
      embeds: []
    55e4cee9-c809-4605-8ed0-da2c8c1d6d34:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 210
      z: 1
      embeds: []
Resources:
  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: codebuild-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
            Version: 2012-10-17
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 634a8f99-678c-43b8-8099-a72a842efc0a
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                  - 'codebuild:*'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketVersioning'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 's3:PutObject'
                Resource:
                  - 'arn:aws:s3:::codepipeline*'
                Effect: Allow
              - Action:
                  - 's3:*'
                  - 'cloudformation:*'
                  - 'iam:PassRole'
                Resource: '*'
                Effect: Allow
            Version: 2012-10-17
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f7bf9884-1fd4-4612-866e-21ed4f47ba9c
  SiteBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref SiteBucketName
  SiteImgBucket:
      Type: 'AWS::S3::Bucket'
      DeletionPolicy: Delete
      Properties:
        AccessControl: PublicRead
        BucketName: !Ref SiteImgBucketName
  PipelineBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 75cc0fc4-e9a4-46e9-9cc3-b46eb0b476ad
  CodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    DependsOn: CodeBuildRole
    Properties:
      Name: !Sub '${AWS::StackName}-project'
      Description: Deploy website to S3
      ServiceRole: !GetAtt
        - CodeBuildRole
        - Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref BuildType
        ComputeType: !Ref BuildComputeType
        Image: !Sub '${BuildImage}'
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              commands:
                - npm install
            build:
              commands:
                - npm run build
            post_build:
              commands:
                - aws s3 cp --recursive --acl public-read ./build s3://${SiteBucketName}/
      TimeoutInMinutes: 10
    Metadata:
      'AWS::CloudFormation::Designer':
        id: a0a8ee2a-57a3-47df-a6ea-fc2bbb9cef7f
  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: nmzl-website
      RoleArn: !GetAtt
        - CodePipelineRole
        - Arn
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Artifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: DeployOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 55e4cee9-c809-4605-8ed0-da2c8c1d6d34
Outputs:
  PipelineUrl:
    Value: !Sub >-
      https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
